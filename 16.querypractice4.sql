-- 사원들 중 가장 생일이 늦은 사원과 빠른 사원의 생년월일 그리고 총 사원수를 표시하시오.

SELECT MAX(BIRTH_DE)
	, MIN(BIRTH_DE)
	, COUNT(*)
FROM TB_EMP;


-- 사원들 중 부서 코드 별 가장 늦은 생일, 가장 빠른 생일, 직원 수를 출력하시오.
-- DEPT_CD, DEPT_NM, 가장 늦은 생년월일, 가장 빠른 생년월일, 직원수


SELECT A.DEPT_CD 
	, (SELECT B.DEPT_NM FROM TB_DEPT B WHERE B.DEPT_CD = A.DEPT_CD) AS DEPT_NM 
	, MAX(A.BIRTH_DE) AS "가장 늦은 생년월일"
	, MIN(A.BIRTH_DE) AS "가장 빠른 생년월일"
	, COUNT(*) AS "직원수"
FROM TB_EMP A
GROUP BY A.DEPT_CD
ORDER BY A.DEPT_CD ;


-- 사원들 중 부서 코드 별 가장 늦은 생일, 가장 빠른 생일, 직원 수를 출력하시오.
-- 단 부서별 각 직원수가 3명을 초과하는 부서 
-- DEPT_CD, DEPT_NM, 가장 늦은 생년월일, 가장 빠른 생년월일, 직원수

SELECT A.DEPT_CD 
	, (SELECT B.DEPT_NM FROM TB_DEPT B WHERE B.DEPT_CD = A.DEPT_CD) AS DEPT_NM 
	, MAX(A.BIRTH_DE) AS "가장 늦은 생년월일"
	, MIN(A.BIRTH_DE) AS "가장 빠른 생년월일"
	, COUNT(*) AS "직원수"
FROM TB_EMP A
GROUP BY A.DEPT_CD
HAVING (COUNT(*)) > 3
ORDER BY A.DEPT_CD ;


-- 2019년도 급여 내역 중에서 직원 별로 평균 급여액이 470만원 이상인 직원들의
-- 직원번호, 직원명, 최대급여액수, 최소급여액수, 평균 급여 액수를 출력하시오.

SELECT A.EMP_NO 
	, (SELECT B.EMP_NAME  FROM TB_EMP B WHERE B.EMP_NO = A.EMP_NO) AS EMP_NAME 
	, MAX(A.PAY_AMT) AS MAX_PAY_AMT
	, MIN(A.PAY_AMT) AS MIN_PAY_AMT
	, ROUND(AVG(A.PAY_AMT),2) AS AVG_PAY_AMT
FROM TB_SAL_HIS A
WHERE A.PAY_DE  BETWEEN '20190101' AND '20191231'
GROUP BY A.EMP_NO 
HAVING ROUND(AVG(A.PAY_AMT),2) >= 4700000
ORDER BY A.EMP_NO ;



-- 2019년도의 급여 내역 중 급여의 합계(연봉)가 5500만원을 초과하는 직원의
-- 직원번호, 직원명, 합계급여액수를 출력하시오.


SELECT A.EMP_NO 
	, (SELECT B.EMP_NAME  FROM TB_EMP B WHERE B.EMP_NO = A.EMP_NO) AS EMP_NAME
	, SUM(A.PAY_AMT) AS SUM_PAY_AMT
FROM TB_SAL_HIS A
WHERE A.PAY_DE BETWEEN '20190101' AND '20191231'
GROUP BY A.EMP_NO 
HAVING SUM(A.PAY_AMT) > 55000000
ORDER BY SUM_PAY_AMT DESC ;



-- CASE WHEN
SELECT 
		SUM(CASE WHEN BIRTH_DE LIKE '195%' THEN 1 ELSE 0 END) AS "1950년대생"
		, SUM(CASE WHEN BIRTH_DE LIKE '196%' THEN 1 ELSE 0 END) AS "1960년대생"
		, SUM(CASE WHEN BIRTH_DE LIKE '197%' THEN 1 ELSE 0 END) AS "1970년대생"
		, SUM(CASE WHEN BIRTH_DE LIKE '198%' THEN 1 ELSE 0 END) AS "1980년대생"
		, SUM(CASE WHEN BIRTH_DE LIKE '199%' THEN 1 ELSE 0 END) AS "1990년대생"
		, COUNT(*) CNT 
FROM TB_EMP A;



-- 부서별로 직원들이 몇 십년대생인지에 대한 카운트를 표시하시오.
-- 부서번호, 부서명, 1950년대생 , , , ,  CNT


SELECT A.DEPT_CD 
	, (SELECT B.DEPT_NM  FROM TB_DEPT B WHERE B.DEPT_CD  = A.DEPT_CD) AS DEPT_NM 
	, SUM(CASE WHEN BIRTH_DE LIKE '195%' THEN 1 ELSE 0 END) AS "1950년대생"
	, SUM(CASE WHEN BIRTH_DE LIKE '196%' THEN 1 ELSE 0 END) AS "1960년대생"
	, SUM(CASE WHEN BIRTH_DE LIKE '197%' THEN 1 ELSE 0 END) AS "1970년대생"
	, SUM(CASE WHEN BIRTH_DE LIKE '198%' THEN 1 ELSE 0 END) AS "1980년대생"
	, SUM(CASE WHEN BIRTH_DE LIKE '199%' THEN 1 ELSE 0 END) AS "1990년대생"
	, COUNT(*) CNT
FROM TB_EMP A
GROUP BY A.DEPT_CD 
ORDER BY A.DEPT_CD ;


-- 자격증명을 기준으로 정렬하시오.

SELECT A.CERTI_CD 
	, A.CERTI_NM 
	, A.ISSUE_INSTI_NM 
FROM TB_CERTI A
ORDER BY A.CERTI_NM DESC ;


SELECT A.CERTI_CD 
	, A.CERTI_NM 
	, A.ISSUE_INSTI_NM 
FROM TB_CERTI A
ORDER BY 2 DESC ;



SELECT A.CERTI_CD 
	, A.CERTI_NM  AS CERTI_NAME
	, A.ISSUE_INSTI_NM 
FROM TB_CERTI A
ORDER BY CERTI_NAME DESC ;

-- SELECT 절에 존재하지 않는 컬럼으로 정렬 가능
SELECT A.CERTI_CD 
	, A.ISSUE_INSTI_NM 
FROM TB_CERTI A
ORDER BY A.CERTI_NM DESC ;




















